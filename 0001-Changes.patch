From 393c86639182ad741854d74707a79d58bde51c66 Mon Sep 17 00:00:00 2001
From: Debjit Mandal <debjitmandal8925@gmail.com>
Date: Sun, 26 May 2024 15:55:03 +0530
Subject: [PATCH] Changes

---
 client3.py     | 22 ++++++++++++----------
 client_test.py | 42 ++++++++++++++++++++++++++----------------
 2 files changed, 38 insertions(+), 26 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..a8a68b7 100644
--- a/client3.py
+++ b/client3.py
@@ -31,29 +31,31 @@ N = 500
 
 def getDataPoint(quote):
     """ Produce all the needed values to generate a datapoint """
-    """ ------------- Update this function ------------- """
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) / 2
     return stock, bid_price, ask_price, price
 
 
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
-    """ ------------- Update this function ------------- """
-    return 1
+    if price_b == 0:
+        return float('inf')
+    return price_a / price_b
 
 
 # Main
 if __name__ == "__main__":
-    # Query the price once every N seconds.
+    prices = {}
     for _ in iter(range(N)):
-        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
-
-        """ ----------- Update to get the ratio --------------- """
+        quotes = json.loads(urllib.request.urlopen(
+            QUERY.format(random.random())).read())
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
-            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+            prices[stock] = price
+            print(f"Quoted {stock} at (bid:{bid_price}, ask:{
+                  ask_price}, price:{price})")
 
-        print("Ratio %s" % getRatio(price, price))
+        if 'ABC' in prices and 'DEF' in prices:
+            print(f"Ratio {getRatio(prices['ABC'], prices['DEF'])}")
diff --git a/client_test.py b/client_test.py
index af2bf26..8d75bda 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,24 +1,34 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
 
-class ClientTest(unittest.TestCase):
-  def test_getDataPoint_calculatePrice(self):
-    quotes = [
-      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
-
-  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
-    quotes = [
-      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
 
+class ClientTest(unittest.TestCase):
+    def test_getDataPoint_calculatePrice(self):
+        quotes = [
+            {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+                'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+                'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+        ]
+        for quote in quotes:
+            self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (
+                quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
 
-  """ ------------ Add more unit tests ------------ """
+    def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+        quotes = [
+            {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+                'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+            {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+                'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+        ]
+        for quote in quotes:
+            self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (
+                quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
 
+    def test_getRatio(self):
+        self.assertEqual(getRatio(120, 60), 2)
+        self.assertEqual(getRatio(120, 0), float('inf'))
+        self.assertEqual(getRatio(0, 60), 0)
 
 
 if __name__ == '__main__':
-- 
2.45.1.windows.1

